# Thanks to Calego / ElfFriend (https://github.com/ElfFriend-DnD/) for the initial reference for this GH Action.
name: Module Tag / Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install Dependencies
        run: |
          npm install -g yarn
          yarn install

      # run the build action; choose `build-deploy` if not minifying your output bundle.
      - name: Build Deploy Directory
        run: |
          yarn run build-release

      # create a zip file with all files required by the module to add to the release
      - name: Zip Files
        working-directory: ./build
        run: |
          zip -r ./module.zip ./*

      # Get the tag name, for use by later steps
      - name: Get Tag Name
        run: |
          # ${variable#pattern} expands `pattern`, and if it matches the
          # contents of `variable` starting from the left, removes it.
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Modify module.json with the correct version
      - name: Set Version in Manifest
        env:
          JQ_PROGRAM: |
            walk(
              if type == "string" then
                gsub("TAG_VERSION"; $ENV.RELEASE_VERSION)
              else
                .
              end
            )
        run: |
          jq "$JQ_PROGRAM" ./build/module.json > ./build/module.new.json
          mv ./build/module.new.json ./build/module.json

      # Generate changelog for release body
      - name: Changelog
        id: Changelog
        uses: scottbrenner/generate-changelog-action@master
        env:
          REPO: ${{ github.repository }}

      # Create a release for this specific version
      - name: Create Release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # set this to false if you want to prevent updating existing releases
          name: ${{ env.RELEASE_VERSION }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './build/module.json,./build/module.zip'
          tag: ${{ env.RELEASE_VERSION }}
